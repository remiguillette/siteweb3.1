Pourquoi Talkback ne détecte pas vos icônes : un guide pour l'accessibilité
Si Talkback ne parvient pas à trouver et à décrire les icônes sur votre site web lors d'un test d'accessibilité, c'est très probablement parce que les informations textuelles alternatives nécessaires ne sont pas fournies dans le code. Les lecteurs d'écran comme Talkback ne "voient" pas les éléments visuels ; ils se fient aux descriptions textuelles associées pour les interpréter à l'utilisateur.
Voici les raisons les plus courantes de ce problème et comment y remédier.
Absence d'alternative textuelle
La cause la plus fréquente est l'oubli de l'attribut alt pour les images ou d'autres mécanismes pour les icônes non textuelles. Sans cela, Talkback ignore l'icône ou annonce simplement "image" ou "graphique non étiqueté", ce qui n'est d'aucune aide pour l'utilisateur.
Pour les images (<img>) :
Assurez-vous que chaque balise <img> possède un attribut alt qui décrit la fonction ou le contenu de l'image.
 * Icône informative : <img src="icone-profil.png" alt="Voir votre profil">
 * Icône décorative : Si l'icône n'a qu'un but esthétique et est accompagnée de texte, laissez l'attribut alt vide (alt="") pour que les lecteurs d'écran l'ignorent et ne créent pas de bruit inutile.
Problèmes avec les polices d'icônes et les SVG
Les icônes sont souvent implémentées via des polices d'icônes (comme Font Awesome) ou des graphiques vectoriels (SVG). Ces techniques nécessitent une attention particulière pour être accessibles.
Polices d'icônes
Les polices d'icônes insèrent des symboles via CSS. Par défaut, ces icônes sont invisibles pour les lecteurs d'écran.
Solution :
Utilisez les attributs ARIA (Accessible Rich Internet Applications) pour fournir une description.
 * Icône seule (bouton) : Ajoutez un aria-label à l'élément cliquable pour décrire l'action. L'icône elle-même doit être cachée à l'aide de aria-hidden="true".
   <button aria-label="Fermer">
  <i class="fa fa-times" aria-hidden="true"></i>
</button>

 * Icône avec texte visible : Cachez l'icône décorative avec aria-hidden="true" pour éviter la redondance.
   <button>
  <i class="fa fa-user" aria-hidden="true"></i> Profil
</button>

Icônes SVG en ligne
Les SVG insérés directement dans le code HTML offrent plus de contrôle sur l'accessibilité.
Solution :
Utilisez les balises <title> et <desc> ainsi que des attributs ARIA.
 * Donner un nom accessible : La méthode la plus simple est d'utiliser aria-label sur l'élément SVG.
   <svg role="img" aria-label="Menu">
  </svg>

 * Utiliser <title> et aria-labelledby : Vous pouvez également donner un id à la balise <title> et y faire référence avec aria-labelledby sur la balise <svg>.
   <svg role="img" aria-labelledby="titre-icone-menu">
  <title id="titre-icone-menu">Menu</title>
  </svg>

Utilisation incorrecte des attributs ARIA
Une mauvaise utilisation des attributs ARIA peut également causer des problèmes. Par exemple, l'ajout d'un role="presentation" ou aria-hidden="true" sur un élément qui devrait être interactif le masquera des technologies d'assistance.
Vérifications rapides :
 * Texte alternatif manquant : L'icône a-t-elle un alt, un aria-label ou une autre alternative textuelle ?
 * Icônes purement décoratives : Sont-elles correctement masquées avec aria-hidden="true" pour ne pas polluer l'expérience utilisateur ?
 * Boutons et liens : Les éléments cliquables contenant uniquement une icône ont-ils une étiquette accessible qui décrit leur fonction ?
En résumé, pour que Talkback (et d'autres lecteurs d'écran) puisse interpréter correctement vos icônes, il est impératif de leur fournir une alternative textuelle claire et concise qui décrit leur fonction, et non leur apparence visuelle.